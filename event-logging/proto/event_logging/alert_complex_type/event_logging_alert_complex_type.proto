// event_logging_alert_complex_type.proto at 0:0
syntax = "proto3";
package event_logging.alert_complex_type;

import "event_logging/alert_priority_simple_type/event_logging_alert_priority_simple_type.proto";
import "event_logging/alert_severity_simple_type/event_logging_alert_severity_simple_type.proto";
import "event_logging/alert_type_simple_type/event_logging_alert_type_simple_type.proto";
import "event_logging/anti_malware_threat_complex_type/event_logging_anti_malware_threat_complex_type.proto";
import "event_logging/change_action_simple_type/event_logging_change_action_simple_type.proto";
import "event_logging/data_complex_type/event_logging_data_complex_type.proto";
import "event_logging/multi_object_complex_type/event_logging_multi_object_complex_type.proto";
import "event_logging/network_complex_type/event_logging_network_complex_type.proto";
import "event_logging/network_location_complex_type/event_logging_network_location_complex_type.proto";
import "validate/validate.proto";

// Type that describes and alert of some kind, e.g. an alert generated by an intrusion detection system, malware scanner, virus scanner, etc.
message AlertComplexType {
  // The type of alert that has been fired, e.g. Error, Malware, etc.
  event_logging.alert_type_simple_type.AlertTypeSimpleType type = 1 [
    (validate.rules).message.required = true
  ];
  // The severity of the alert.
  event_logging.alert_severity_simple_type.AlertSeveritySimpleType severity = 2;
  // The priority of the alert.
  event_logging.alert_priority_simple_type.AlertPrioritySimpleType priority = 3;
  // The name of the event or rule that fired or vulnerability or malware that has been scanned for or found.
  string subject = 4;
  // The descriptive message for the alert.
  string description = 5;
  // Information about an IDS generated event.
  IDSType i_d_s = 6;
  // Type that describes a threat identified by an anti-malware scanner.
  event_logging.anti_malware_threat_complex_type.AntiMalwareThreatComplexType malware = 7;
  // A type to describe part of a computer network or some activity on a network.
  event_logging.network_complex_type.NetworkComplexType network = 8;
  // Any events to do with monitoring the status of files should use this element.
  ChangeType change = 9;
  // Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
  repeated event_logging.data_complex_type.DataComplexType data = 10 [
    (validate.rules).repeated = {
      min_items: 0
    }
  ];

  // Information about an IDS generated event.
  message IDSType {
    // The type of IDS event or rule that fired.
    string rule = 1;
    // The source network device involved in the IDS event.
    event_logging.network_location_complex_type.NetworkLocationComplexType source = 2;
    // The destination network device involved in the IDS event.
    event_logging.network_location_complex_type.NetworkLocationComplexType destination = 3;
    // Details about the payload being transmitted between the source and destination devices.
    event_logging.multi_object_complex_type.MultiObjectComplexType payload = 4;
  }
  // Information about an IDS generated event.
  message ChangeType {
    // The action performed by the file monitor, e.g. starting to scan files for changes, or the detection of a file change.
    event_logging.change_action_simple_type.ChangeActionSimpleType action = 1 [
      (validate.rules).message.required = true
    ];
    // Describes the last known state of the file before it was altered.
    event_logging.multi_object_complex_type.MultiObjectComplexType before = 2;
    // Describes the new state of the file now it has changed.
    event_logging.multi_object_complex_type.MultiObjectComplexType after = 3;
    // The file monitoring rule that was fired to generate this event.
    string rule = 4;
  }
}
