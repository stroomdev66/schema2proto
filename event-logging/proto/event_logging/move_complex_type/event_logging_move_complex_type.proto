// event_logging_move_complex_type.proto at 0:0
syntax = "proto3";
package event_logging.move_complex_type;

import "event_logging/copy_move_outcome_complex_type/event_logging_copy_move_outcome_complex_type.proto";
import "event_logging/data_complex_type/event_logging_data_complex_type.proto";
import "event_logging/multi_object_complex_type/event_logging_multi_object_complex_type.proto";
import "validate/validate.proto";

// Captures data relevant to move events, e.g. moving a file from one folder/device to another.
message MoveComplexType {
  // The source of the data being moved.
  event_logging.multi_object_complex_type.MultiObjectComplexType source = 1 [
    (validate.rules).message.required = true
  ];
  // The destination for the data being moved.
  event_logging.multi_object_complex_type.MultiObjectComplexType destination = 2 [
    (validate.rules).message.required = true
  ];
  // Used to determine if the move was successful. If omitted it is assumed that the move was successful and was permitted.
  event_logging.copy_move_outcome_complex_type.CopyMoveOutcomeComplexType outcome = 3;
  // Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
  repeated event_logging.data_complex_type.DataComplexType data = 4 [
    (validate.rules).repeated = {
      min_items: 0
    }
  ];
}
